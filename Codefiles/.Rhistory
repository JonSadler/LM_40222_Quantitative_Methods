install.packages("GWalkR")
setwd("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles")
getwd()
setwd("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles")
setwd("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles")
setwd("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles")
getwd
getwd
getwd()
getwd()
setwd("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles")
setwd("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles")
knit_with_parameters("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/LM40222_Week_1.Rmd")
install.packages("tidyverse") # Note the use of quotes
install.packages("tidyverse")
install.packages("tidyverse") # Note the use of quotes
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse") # Note the use of quotes
install.packages("tidyverse")
install.packages("tidyverse") # Note the use of quotes
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
remove.packages("tidyverse")
install.packages("tidyverse") # Note the use of quotes
install.packages("tidyverse")
install.packages("tidyverse") # Note the use of quotes
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse") # Note the use of quotes
install.packages("tidyverse")
detach("package:ggplot2", unload = TRUE)
detach("package:graphics", unload = TRUE)
detach("package:grDevices", unload = TRUE)
detach("package:lubridate", unload = TRUE)
detach("package:methods", unload = TRUE)
detach("package:purrr", unload = TRUE)
detach("package:readr", unload = TRUE)
detach("package:stringr", unload = TRUE)
detach("package:tibble", unload = TRUE)
detach("package:tidyverse", unload = TRUE)
detach("package:tidyr", unload = TRUE)
detach("package:utils", unload = TRUE)
install.packages("tidyverse") # Note the use of quotes
library(utils)
install.packages("tidyverse") # Note the use of quotes
install.packages("tidyverse") # Note the use of quotes
install.packages("tidyverse")
library(tidyverse)
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
install.packages("tidyverse") # Note the use of quotes
install.packages("tidyverse") # Note the use of quotes
install.packages("tidyverse")
# loads a csv, remember to correctly input the file location within your working directory
Ethnicity <- read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/TS021 - Ethnic group.csv")
library(tidyverse) # this loads multiple packages/libraries
setwd("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles")
# loads a csv, remember to correctly input the file location within your working directory
Ethnicity <- read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/TS021 - Ethnic group.csv")
Rooms <- read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/TS053 - Occupancy Rating.csv")
Qualifications <-read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/TS067 - Highest level of qualification.csv")
Employment <-read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/TS066 - Economic activity status.csv")
# selecting specific columns only
# note this action overwrites the labels you made for the original data,
# so if you make a mistake you will need to reload the data into R
Ethnicity <- Ethnicity[, c(2, 38)] #% White: English, Welsh, Scottish, Northern Irish or British
Rooms <- Rooms[, c(2, 13)] #
Employment <- Employment[, c(2, 28)] # % Economically active (excluding full-time students): Unemployed
Qualifications <- Qualifications[, c(2, 16)] # % Level 4 qualifications or above
# to change both column names
names(Ethnicity)<- c("Code", "White_British")
names(Rooms)<- c("Code", "Low_Occupancy")
names(Employment)<- c("Code", "Unemployed")
names(Qualifications)<- c("Code", "Qualification")
#1 Merge Ethnicity and Rooms to create a new object called "merged_data_1"
merged_data_1 <- merge(Ethnicity, Rooms, by="Code")
#2 Merge the "merged_data_1" object with Employment to create a new merged data object
merged_data_2 <- merge(merged_data_1, Employment, by="Code")
#3 Merge the "merged_data_2" object with Qualifications to create a new data object
Census.Data <- merge(merged_data_2, Qualifications, by="Code")
#4 Remove the "merged_data" objects as we won't need them anymore
rm(merged_data_1, merged_data_2)
setwd("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Images")
# loads a csv, remember to correctly input the file location within your working directory or point to the directory where you data are stored.
Ethnicity <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS021Ethnic group.csv")
getwd()
setwd("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA")
# loads a csv, remember to correctly input the file location within your working directory or point to the directory where you data are stored.
Ethnicity <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS021Ethnic group.csv")
setwd("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA")
# loads a csv, remember to correctly input the file location within your working directory or point to the directory where you data are stored.
Ethnicity <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS021Ethnic group.csv")
Rooms <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS053Occupancy.csv")
library(tidyverse)
# loads a csv, remember to correctly input the file location within your working directory or point to the directory where you data are stored.
Ethnicity <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS021Ethnic group.csv")
Rooms <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS053Occupancy.csv")
Qualifications <-read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS067Qualifications.csv")
Employment <-read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Images/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS066Economic.csv")
# loads a csv, remember to correctly input the file location within your working directory or point to the directory where you data are stored.
Ethnicity <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS021Ethnic group.csv")
Rooms <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS053Occupancy.csv")
Qualifications <-read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS067Qualifications.csv")
Employment <-read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS066Economic.csv")
getwd()
# selecting specific columns only
# note this action overwrites the labels you made for the original data,
# so if you make a mistake you will need to reload the data into R
Ethnicity <- Ethnicity[, c(2, 38)] #% White: English, Welsh, Scottish, Northern Irish or British
Rooms <- Rooms[, c(2, 12)] # % Occupancy rating of rooms: -1 or less
Employment <- Employment[, c(2, 28)] # % Economically active (excluding full-time students): Unemployed
Qualifications <- Qualifications[, c(2, 16)] # % Level 4 qualifications or above
# to change an individual column name
names(Ethnicity)[2] <- "White_British"
# to change both column names
names(Ethnicity)<- c("Code", "White_British")
names(Rooms)<- c("Code", "Low_Occupancy")
names(Employment)<- c("Code", "Unemployed")
names(Qualifications)<- c("Code", "Qualification")
#1 Merge Ethnicity and Rooms to create a new object called "merged_data_1"
merged_data_1 <- merge(Ethnicity, Rooms, by="Code")
#2 Merge the "merged_data_1" object with Employment to create a new merged data object
merged_data_2 <- merge(merged_data_1, Employment, by="Code")
#3 Merge the "merged_data_2" object with Qualifications to create a new data object
Census.Data <- merge(merged_data_2, Qualifications, by="Code")
#4 Remove the "merged_data" objects as we won't need them anymore
rm(merged_data_1, merged_data_2)
str(Census.Data) # shows the data structure for our combined df called Census.Data.
# Writes the data to a csv named "practical_data" in your file directory
write.csv(Census.Data, "/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/practical_data.csv", row.names=F)
setwd("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods")
getwd()
list.files()
BhamData <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/practical_data.csv") # notice the use of quotes.
glimpse((BhamData))
glimpse((BhamData))
summary(BhamData)
summary(BhamData)
ggsave(
filename = "/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Images/Outputs/BhamPlot.png",
plot = BhamPlot,  # This is the name we gave the plot. Remember to remove the quotes around BhamPlot
width = 965,
height = 650,
dpi = 150,
units = "px")
BhamPlot <- ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm", color = "grey") +
labs(
title = "Educational attainment and unemployment levels in Birmingham (LSOAs)",
subtitle = "Links to ethnicity",
x = "Education attainment (% level 4 or above)", y = "Levels of Unemployment (%)",
color = "White British (%)", size = "White British (%)")
library("tidyverse") # don't forget to use the quote marks!
BhamData <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/practical_data.csv") # notice the use of quotes.
glimpse((BhamData))
summary(BhamData)
ggplot(data = BhamData) # when run it we get a grey box in plot window (bottom left)
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed))
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed)) + geom_point()
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed, colour = White_British)) + geom_point()
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed, colour = White_British)) +
geom_point() +
scale_colour_gradient(low = "lightblue", high = "darkblue")
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue")
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm")
ggplot(data = BhamData, mapping = aes(x = Qualification, y = Unemployed)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm", color = "darkgrey")
ggplot(data = BhamData, mapping = aes(x = Qualification, y = Unemployed)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm", color = "grey") +
labs(
title = "Educational attainment and unemployment levels in Birmingham (LSOAs)",
subtitle = "Links to ethnicity",
x = "Education attainment (% level 4 or above)", y = "Levels of Unemployment (%)",
color = "White British (%)", size = "White British (%)")
BhamPlot <- ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm", color = "grey") +
labs(
title = "Educational attainment and unemployment levels in Birmingham (LSOAs)",
subtitle = "Links to ethnicity",
x = "Education attainment (% level 4 or above)", y = "Levels of Unemployment (%)",
color = "White British (%)", size = "White British (%)")
ggsave(
filename = "/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Outputs/BhamPlot.png",
plot = BhamPlot,  # This is the name we gave the plot. Remember to remove the quotes around BhamPlot
width = 965,
height = 650,
dpi = 150,
units = "px")
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 10)
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 1)
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 5)
ggplot(BhamData, aes(x = Qualification)) +
geom_density()
ggplot(BhamData, aes(sample=Qualification)) +
stat_qq() +
stat_qq_line()
#make this example reproducible
set.seed(1)
#create some fake data that follows a normal distribution for 200 datapoints
df <- data.frame(col=rnorm(200))
#create Q-Q plot
ggplot(df, aes(sample=col)) +
stat_qq() +
stat_qq_line()
ggplot(BhamData, aes(x = 1, y = Qualification)) +
geom_boxplot() +
scale_x_continuous(breaks = NULL) # we need this new code otherwise R will add a 'fake' x axis!
BhamPlot <- ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm", color = "grey") +
labs(
title = "Educational attainment and unemployment levels in Birmingham (LSOAs)",
subtitle = "Links to ethnicity",
x = "Education attainment (% level 4 or above)", y = "Levels of Unemployment (%)",
color = "White British (%)", size = "White British (%)")
ggsave(
filename = "/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Outputs/BhamPlot.png",
plot = BhamPlot,  # This is the name we gave the plot. Remember to remove the quotes around BhamPlot
width = 965,
height = 650,
dpi = 150,
units = "px")
ggsave(
filename = "/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Outputs/BhamPlot.png",
plot = BhamPlot,  # This is the name we gave the plot. Remember to remove the quotes around BhamPlot
width = 965,
height = 650,
dpi = 150,
units = "px")
getwd()
get()
getwd()
setwd("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Codefiles)
setwd("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Codefiles")
# List of required libraries
required_libraries <- c("sf","terra", "spdep","mapsf")
# Check for the libraries that are not already installed
libraries_to_install <- required_libraries[!(required_libraries %in% installed.packages()[,"Package"])]
# Install missing libraries
if(length(libraries_to_install)) {
install.packages(libraries_to_install, dependencies = TRUE)
}
# Load all the required libraries
invisible(lapply(required_libraries, library, character.only = TRUE))
# List of required libraries
required_libraries <- c("sf","terra", "spdep","mapsf")
# Check for the libraries that are not already installed
libraries_to_install <- required_libraries[!(required_libraries %in% installed.packages()[,"Package"])]
# Install missing libraries
if(length(libraries_to_install)) {
install.packages(libraries_to_install, dependencies = TRUE)
}
# Load all the required libraries
lapply(required_libraries, library, character.only = TRUE)
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed))
library("tidyverse") # don't forget to use the quote marks!
BhamData <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/practical_data.csv") # notice the use of quotes.
glimpse(BhamData)
summary(BhamData)
ggplot(data = BhamData) # when run it we get a grey box in plot window (bottom left)
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed))
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed)) + geom_point()
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed, colour = White_British)) + geom_point()
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed, colour = White_British)) +
geom_point() +
scale_colour_gradient(low = "lightblue", high = "darkblue")
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue")
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm")
ggplot(data = BhamData, mapping = aes(x = Qualification, y = Unemployed)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm", color = "darkgrey")
ggplot(data = BhamData, mapping = aes(x = Qualification, y = Unemployed)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm", color = "grey") +
labs(
title = "Educational attainment and unemployment levels in Birmingham (LSOAs)",
subtitle = "Links to ethnicity",
x = "Education attainment (% level 4 or above)", y = "Levels of Unemployment (%)",
color = "White British (%)", size = "White British (%)")
BhamPlot <- ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm", color = "grey") +
labs(
title = "Educational attainment and unemployment levels in Birmingham (LSOAs)",
subtitle = "Links to ethnicity",
x = "Education attainment (% level 4 or above)", y = "Levels of Unemployment (%)",
color = "White British (%)", size = "White British (%)")
ggsave(
filename = "/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Outputs/BhamPlot.png",
plot = BhamPlot,  # This is the name we gave the plot. Remember to remove the quotes around BhamPlot
width = 965,
height = 650,
dpi = 150,
units = "px")
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 10)
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 1)
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 5)
ggplot(BhamData, aes(x = Qualification)) +
geom_density()
ggplot(BhamData, aes(sample=Qualification)) +
stat_qq() +
stat_qq_line()
#make this example reproducible
set.seed(1)
#create some fake data that follows a normal distribution for 200 datapoints
df <- data.frame(col=rnorm(200))
#create Q-Q plot
ggplot(df, aes(sample=col)) +
stat_qq() +
stat_qq_line()
ggplot(BhamData, aes(x = 1, y = Qualification)) +
geom_boxplot() +
scale_x_continuous(breaks = NULL) # we need this new code otherwise R will add a 'fake' x axis!
ggplot(Gap2007, aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(size=pop_by_mil, colour=continent)) +
labs(title = "Global GDP and life expectancy pattern",
subtitle = "2007",
x = "Gross domestic product (US $)", y = "Life expectency (years)",
color = "Continent", size = "Population size (millions)")
# install.packages("gapminder") - I have made this a comment as it's already installed on my system.
library(gapminder)
glimpse(gapminder)
Gap2007 <- gapminder %>%
filter(year == 2007)
Gap2007 <- Gap2007 %>%
dplyr::mutate(pop_by_mil = pop / 1000000) # mutate is from dplyr
library("tidyverse") # don't forget to use the quote marks!
BhamData <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/practical_data.csv") # notice the use of quotes.
glimpse(BhamData)
summary(BhamData)
ggplot(data = BhamData) # when run it we get a grey box in plot window (bottom left)
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed))
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed)) + geom_point()
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed, colour = White_British)) + geom_point()
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed, colour = White_British)) +
geom_point() +
scale_colour_gradient(low = "lightblue", high = "darkblue")
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue")
ggplot(
data = BhamData,
mapping = aes(x = Qualification, y = Unemployed)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm")
ggplot(data = BhamData, mapping = aes(x = Qualification, y = Unemployed)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm", color = "darkgrey")
ggplot(data = BhamData, mapping = aes(x = Qualification, y = Unemployed)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm", color = "grey") +
labs(
title = "Educational attainment and unemployment levels in Birmingham (LSOAs)",
subtitle = "Links to ethnicity",
x = "Education attainment (% level 4 or above)", y = "Levels of Unemployment (%)",
color = "White British (%)", size = "White British (%)")
BhamPlot <- ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "lightblue", high = "darkblue") +
geom_smooth(method = "lm", color = "grey") +
labs(
title = "Educational attainment and unemployment levels in Birmingham (LSOAs)",
subtitle = "Links to ethnicity",
x = "Education attainment (% level 4 or above)", y = "Levels of Unemployment (%)",
color = "White British (%)", size = "White British (%)")
ggsave(
filename = "/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Outputs/BhamPlot.png",
plot = BhamPlot,  # This is the name we gave the plot. Remember to remove the quotes around BhamPlot
width = 965,
height = 650,
dpi = 150,
units = "px")
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 10)
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 1)
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 5)
ggplot(BhamData, aes(x = Qualification)) +
geom_density()
ggplot(BhamData, aes(sample=Qualification)) +
stat_qq() +
stat_qq_line()
#make this example reproducible
set.seed(1)
#create some fake data that follows a normal distribution for 200 datapoints
df <- data.frame(col=rnorm(200))
#create Q-Q plot
ggplot(df, aes(sample=col)) +
stat_qq() +
stat_qq_line()
ggplot(BhamData, aes(x = 1, y = Qualification)) +
geom_boxplot() +
scale_x_continuous(breaks = NULL) # we need this new code otherwise R will add a 'fake' x axis!
ggplot(Gap2007, aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(size=pop_by_mil, colour=continent)) +
labs(title = "Global GDP and life expectancy pattern",
subtitle = "2007",
x = "Gross domestic product (US $)", y = "Life expectency (years)",
color = "Continent", size = "Population size (millions)")
# install.packages("gapminder") - I have made this a comment as it's already installed on my system.
library(gapminder)
glimpse(gapminder)
Gap2007 <- gapminder %>%
filter(year == 2007)
Gap2007 <- Gap2007 %>%
dplyr::mutate(pop_by_mil = pop / 1000000) # mutate is from dplyr
# List of required libraries
required_libraries <- c("sf","terra", "spdep","mapsf","maps","viridis","tmap")
# Check for the libraries that are not already installed
libraries_to_install <- required_libraries[!(required_libraries %in% installed.packages()[,"Package"])]
# Install missing libraries
if(length(libraries_to_install)) {
install.packages(libraries_to_install, dependencies = TRUE)
}
# Load all the required libraries
lapply(required_libraries, library, character.only = TRUE)
library("tidyverse") # don't forget to use the quote marks!
getwd()
setwd("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods")
getwd()
# loads a csv, remember to correctly input the file location within your working directory or point to the directory where you data are stored.
Ethnicity <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS021Ethnic group.csv")
Rooms <- read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS053Occupancy.csv")
Qualifications <-read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS067Qualifications.csv")
Employment <-read_csv("/Users/jonsadler/Documents/GitHub/Teaching/LM_40222_Quantitative_Methods/Data/Birmingham Census 2021 MSOA/Bham_C2021_TS066Economic.csv")
unlink("LM40222_Week_2_cache", recursive = TRUE)
Gap2007 <- gapminder %>%
dplyr::filter(year == 2007) # filter function is from dplyr
Gap2007 <- gapminder %>%
dplyr::filter(year == 2007) # filter function is from dplyr
